name: Jest
on: push
jobs:
  test:
    defaults:
      run:
        working-directory: API
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.4.6
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin
          MONGO_INITDB_DATABASE: APP-DATABASE
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongo --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Install mongosh
        run: |
          sudo apt-get install gnupg
          wget -qO- https://www.mongodb.org/static/pgp/server-7.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-7.0.asc
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
          mongosh --version
      - name: Initalize MongoDB
        run: |
          mongosh --host localhost:27017 -u admin -p admin --authenticationDatabase admin <<EOF
            db = db.getSiblingDB('APP-DB');
            db.createUser({ user: 'APP-USERNAME', pwd: 'APP-PASSWORD', roles: [{ role: 'readWrite', db: 'APP-DB' }] })
            db.createCollection('APP-COLLECTION');
          EOF
          # Do whatever you like in here
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "23.1.0"
      # Speed up subsequent runs with caching
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Install required deps for action
      - name: Install Dependencies
        run: npm install
      # Start MongoDB Service
      - name: Start MongoDB
        run: sudo systemctl start mongodb
      # Start server in the background
      - name: Start Server
        run: npm start &
      # Wait for server to be ready
      - name: Wait for Server
        run: sleep 10
      # Finally, run our tests
      - name: Run the tests
        run: npm test
